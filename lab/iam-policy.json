{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "eks:*",
        "ec2:CreateLaunchTemplate",
        "ec2:DeleteLaunchTemplate",
        "iam:CreateOpenIDConnectProvider",
        "iam:DeleteOpenIDConnectProvider",
        "iam:TagOpenIDConnectProvider",
        "iam:GetOpenIDConnectProvider"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["cloudformation:CreateStack"],
      "Resource": "arn:aws:cloudformation:${Region}:${Account}:stack/eksctl-${Environment}*",
      "Condition": {
        "Null": {
          "cloudformation:RoleARN": "true"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": ["cloudformation:DeleteStack"],
      "Resource": "arn:aws:cloudformation:${Region}:${Account}:stack/eksctl-${Environment}*",
      "Condition": {
        "Null": {
          "cloudformation:RoleARN": "true"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloudformation:Get*",
        "cloudformation:Describe*",
        "cloudformation:List*",
        "cloudformation:TagResource"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["ec2:Get*", "ec2:Describe*", "ec2:List*", "ec2:RunInstances"],
      "Resource": "*"
    },
    {
      "Effect": "Deny",
      "Action": "ec2:RunInstances",
      "Resource": "arn:aws:ec2:*:*:instance/*",
      "Condition": {
        "ForAnyValue:StringNotLike": {
          "ec2:InstanceType": ["m5.large", "t4g.medium", "c*.large"]
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:CreateVpc",
        "ec2:CreateSubnet",
        "ec2:CreateRouteTable",
        "ec2:CreateRoute",
        "ec2:CreateInternetGateway",
        "ec2:AttachInternetGateway",
        "ec2:AssociateRouteTable",
        "ec2:ModifyVpcAttribute",
        "ec2:CreateSecurityGroup",
        "ec2:AllocateAddress",
        "ec2:ReleaseAddress",
        "ec2:DisassociateAddress",
        "ec2:CreateNetworkAclEntry",
        "ec2:DeleteNetworkAclEntry",
        "ec2:CreateNatGateway",
        "ec2:DeleteNatGateway"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:DeleteVpc",
        "ec2:DeleteSubnet",
        "ec2:DeleteRouteTable",
        "ec2:DeleteRoute",
        "ec2:DeleteInternetGateway",
        "ec2:DetachInternetGateway",
        "ec2:DisassociateRouteTable",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifySubnetAttribute",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:DeleteSecurityGroup",
        "ec2:ModifySecurityGroupRules",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
      ],
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "aws:ResourceTag/env": ["${Environment}*"]
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress"
      ],
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "aws:ResourceTag/aws:eks:cluster-name": ["${Environment}*"]
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupEgress"
      ],
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "aws:ResourceTag/aws:eks:cluster-name": ["${Environment}*"]
        }
      }
    },
    {
      "Sid": "Ec2Tags",
      "Effect": "Allow",
      "Action": ["ec2:CreateTags", "ec2:DeleteTags"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "autoscaling:Get*",
        "autoscaling:Describe*",
        "autoscaling:List*"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["sts:GetCallerIdentity"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "kms:CreateKey",
        "kms:ScheduleKeyDeletion",
        "kms:CreateGrant",
        "kms:TagResource",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:EnableKeyRotation",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:ListResourceTags",
        "kms:PutKeyPolicy",
        "kms:CreateAlias",
        "kms:DeleteAlias"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["kms:List*", "kms:Get*", "kms:Describe*"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole",
        "iam:GetRolePolicy",
        "iam:DetachRolePolicy",
        "iam:AttachRolePolicy",
        "iam:PutRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:DeleteRole",
        "iam:ListInstanceProfilesForRole",
        "iam:ListAttachedRolePolicies",
        "iam:ListRolePolicies",
        "iam:TagRole",
        "iam:PassRole",
        "sts:AssumeRole"
      ],
      "Resource": [
        "arn:aws:iam::${Account}:role/${Environment}*",
        "arn:aws:iam::${Account}:role/eksctl-${Environment}*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreatePolicy",
        "iam:DeletePolicy",
        "iam:GetPolicyVersion",
        "iam:ListPolicyVersions",
        "iam:TagPolicy",
        "iam:GetPolicy"
      ],
      "Resource": [
        "arn:aws:iam::${Account}:policy/${Environment}*",
        "arn:aws:iam::${Account}:policy/eksctl-${Environment}*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreateInstanceProfile",
        "iam:DeleteInstanceProfile",
        "iam:TagInstanceProfile",
        "iam:RemoveRoleFromInstanceProfile"
      ],
      "Resource": [
        "arn:aws:iam::${Account}:instance-profile/${Environment}*",
        "arn:aws:iam::${Account}:instance-profile/eksctl-${Environment}*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": ["iam:ListOpenIDConnectProviders", "iam:GetRole"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["aps:CreateWorkspace"],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:RequestTag/env": ["${Environment}*"]
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": ["aps:DeleteWorkspace"],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:ResourceTag/env": ["${Environment}*"]
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": ["aps:Describe*", "aps:List*"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["dynamodb:ListTables"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "dynamodb:CreateTable",
        "dynamodb:DeleteTable",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:ListTagsOfResource",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:TagResource"
      ],
      "Resource": "arn:aws:dynamodb:${Region}:${Account}:table/${Environment}-carts"
    },
    {
      "Effect": "Allow",
      "Action": ["secretsmanager:ListSecrets"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "secretsmanager:CreateSecret",
        "secretsmanager:DeleteSecret",
        "secretsmanager:DescribeSecret"
      ],
      "Resource": "arn:aws:secretsmanager:${Region}:${Account}:secret:${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": ["secretsmanager:ListSecrets"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "sqs:CreateQueue",
        "sqs:DeleteQueue",
        "sqs:GetQueueAttributes",
        "sqs:SetQueueAttributes",
        "sqs:TagQueue"
      ],
      "Resource": "arn:aws:sqs:${Region}:${Account}:${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "rds:CreateDBInstance",
        "rds:CreateTenantDatabase",
        "rds:DeleteDBInstance",
        "rds:DeleteTenantDatabase",
        "rds:DescribeDBInstances",
        "rds:AddTagsToResource"
      ],
      "Resource": "arn:aws:rds:${Region}:${Account}:db:${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "rds:CreateDBSubnetGroup",
        "rds:DeleteDBSubnetGroup",
        "rds:DescribeDBSubnetGroups",
        "rds:AddTagsToResource"
      ],
      "Resource": "arn:aws:rds:${Region}:${Account}:subgrp:${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "lambda:AddPermission",
        "lambda:CreateFunction",
        "lambda:DeleteFunction",
        "lambda:GetFunction",
        "lambda:GetFunctionCodeSigningConfig",
        "lambda:GetPolicy",
        "lambda:GetRuntimeManagementConfig",
        "lambda:ListVersionsByFunction",
        "lambda:RemovePermission"
      ],
      "Resource": "arn:aws:lambda:${Region}:${Account}:function:${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "es:CreateDomain",
        "es:DeleteDomain",
        "es:DescribeDomain",
        "es:DescribeDomainConfig",
        "es:GetCompatibleVersions",
        "es:ListTags",
        "es:AddTags"
      ],
      "Resource": "arn:aws:es:${Region}:${Account}:domain/${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": ["elasticloadbalancing:Describe*", "elasticloadbalancing:Get*"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "elasticfilesystem:CreateFileSystem",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:TagResource"
      ],
      "Resource": "*"
    },

    {
      "Effect": "Allow",
      "Action": [
        "cloudwatch:DeleteDashboards",
        "cloudwatch:GetDashboard",
        "cloudwatch:PutDashboard"
      ],
      "Resource": "arn:aws:cloudwatch::${Account}:dashboard/*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ecr:CreateRepository",
        "ecr:DeleteRepository",
        "ecr:DescribeRepositories",
        "ecr:ListTagsForResource",
        "ecr:TagResource"
      ],
      "Resource": [
        "arn:aws:ecr:${Region}:${Account}:repository/retail-store-sample*",
        "arn:aws:ecr:${Region}:${Account}:repository/${Environment}*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": ["codepipeline:ListTagsForResource"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "codepipeline:CreatePipeline",
        "codepipeline:DeletePipeline",
        "codepipeline:GetPipeline",
        "codepipeline:GetPipelineState"
      ],
      "Resource": "arn:aws:codepipeline:${Region}:${Account}:${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "guardduty:CreateDetector",
        "guardduty:DeleteDetector",
        "guardduty:ListDetectors"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["ec2:Get*", "ec2:Describe*", "ec2:List*"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": ["logs:DescribeLogGroups", "logs:ListTagsForResource"],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup",
        "logs:DeleteLogGroup",
        "logs:DeleteSubscriptionFilter",
        "logs:PutRetentionPolicy",
        "logs:PutSubscriptionFilter",
        "logs:TagResource",
        "logs:TagLogGroup",
        "logs:Get*",
        "logs:Describe*",
        "logs:List*"
      ],
      "Resource": [
        "arn:aws:logs:${Region}:${Account}:log-group:${Environment}*",
        "arn:aws:logs:${Region}:${Account}:log-group:/aws/eks/${Environment}*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "events:DeleteRule",
        "events:DescribeRule",
        "events:ListTagsForResource",
        "events:ListTargetsByRule",
        "events:PutRule",
        "events:PutTargets",
        "events:RemoveTargets"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "vpc-lattice:List*",
        "vpc-lattice:Get*",
        "vpc-lattice:Describe*",
        "vpc-lattice:DeleteServiceNetwork",
        "vpc-lattice:DeleteServiceNetworkVpcAssociation"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "elasticfilesystem:CreateMountTarget",
        "elasticfilesystem:DeleteFileSystem",
        "elasticfilesystem:DeleteMountTarget",
        "elasticfilesystem:DescribeLifecycleConfiguration",
        "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "elasticfilesystem:DescribeMountTargets"
      ],
      "Resource": "arn:aws:elasticfilesystem:${Region}:${Account}:file-system/*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:GetAccelerateConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLogging",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetReplicationConfiguration",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketTagging"
      ],
      "Resource": "arn:aws:s3:::${Environment}*"
    },
    {
      "Effect": "Allow",
      "Action": ["iam:CreateServiceLinkedRole"],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "iam:AWSServiceName": [
            "eks.amazonaws.com",
            "eks-nodegroup.amazonaws.com",
            "eks-fargate.amazonaws.com"
          ]
        }
      }
    }
  ]
}
